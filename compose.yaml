version: "3"
services:

  kafka:
    profiles: [ "data_feed", "data_feed_dep", "dep", "all" ]
    container_name: aml_kafka
    image: apache/kafka:3.7.0
    network_mode: host
    healthcheck:
      test: /opt/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9092 --list || exit 1
      start_period: 10s
      interval: 10s
      timeout: 10s
      retries: 3
  data_feed:
    profiles: [ "data_feed", "dep", "all" ]
    container_name: aml_data_feed
    build:
      context: ./src/data_feed/
      dockerfile: Dockerfile
    volumes:
      - ./data/work:/data_feed/data
    env_file:
      - ./configs/data_feed-config.env
    network_mode: host
    depends_on:
      kafka:
        condition: service_healthy

  hadoop_namenode:
    profiles: [ "data_output", "dep", "all" ]
    container_name: aml_hadoop_namenode
    image: apache/hadoop:3
    network_mode: host
    command: [ "hdfs", "namenode" ]
    env_file:
      - ./configs/hadoop-config.env
    environment:
      ENSURE_NAMENODE_DIR: "/tmp/hadoop-root/dfs/name"
  hadoop_datanode:
    profiles: [ "data_output", "dep", "all" ]
    container_name: aml_hadoop_datanode
    image: apache/hadoop:3
    network_mode: host
    command: [ "hdfs", "datanode" ]
    env_file:
      - ./configs/hadoop-config.env
  hadoop_resourcemanager:
    profiles: [ "data_output", "dep", "all" ]
    container_name: aml_hadoop_resourcemanager
    image: apache/hadoop:3
    network_mode: host
    command: [ "yarn", "resourcemanager" ]
    env_file:
      - ./configs/hadoop-config.env
  hadoop_nodemanager:
    profiles: [ "data_output", "dep", "all" ]
    container_name: aml_hadoop_nodemanager
    image: apache/hadoop:3
    network_mode: host
    command: [ "yarn", "nodemanager" ]
    env_file:
      - ./configs/hadoop-config.env

  db:
    profiles: [ "data_output", "dep", "all" ]
    container_name: aml_db
    image: postgres
    network_mode: host
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: foo
    depends_on:
      - db_adminer
  db_adminer:
    profiles: [ "data_output", "dep", "all" ]
    container_name: aml_db_adminer
    image: adminer
    network_mode: host
    restart: always
