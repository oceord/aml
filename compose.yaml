version: "2"
services:

  kafka:
    profiles: [ "data_feed_dep", "dep" ]
    container_name: aml_kafka
    image: apache/kafka:3.7.0
    network_mode: host
  data_feed:
    profiles: [ "data_feed", "dep" ]
    container_name: aml_data_feed
    build:
      context: ./src/data_feed/
      dockerfile: Dockerfile
    volumes:
      - ./data/:/data_feed/data
    network_mode: host
    depends_on:
      - kafka

  hadoop_namenode:
    profiles: [ "data_output", "hadoop_cluster", "dep" ]
    container_name: aml_hadoop_namenode
    image: apache/hadoop:3
    network_mode: host
    command: [ "hdfs", "namenode" ]
    env_file:
      - ./configs/hadoop-config.env
    environment:
      ENSURE_NAMENODE_DIR: "/tmp/hadoop-root/dfs/name"
  hadoop_datanode:
    profiles: [ "data_output", "hadoop_cluster", "dep" ]
    container_name: aml_hadoop_datanode
    image: apache/hadoop:3
    network_mode: host
    command: [ "hdfs", "datanode" ]
    env_file:
      - ./configs/hadoop-config.env
  hadoop_resourcemanager:
    profiles: [ "data_output", "hadoop_cluster", "dep" ]
    container_name: aml_hadoop_resourcemanager
    image: apache/hadoop:3
    network_mode: host
    command: [ "yarn", "resourcemanager" ]
    env_file:
      - ./configs/hadoop-config.env
    volumes:
      - ./test.sh:/opt/test.sh
  hadoop_nodemanager:
    profiles: [ "data_output", "hadoop_cluster", "dep" ]
    container_name: aml_hadoop_nodemanager
    image: apache/hadoop:3
    network_mode: host
    command: [ "yarn", "nodemanager" ]
    env_file:
      - ./configs/hadoop-config.env

  db:
    profiles: [ "data_output", "db", "dep" ]
    image: postgres
    network_mode: host
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: foo
    depends_on:
      - db_adminer
  db_adminer:
    image: adminer
    network_mode: host
    restart: always
